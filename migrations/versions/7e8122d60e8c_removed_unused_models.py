"""removed unused models

Revision ID: 7e8122d60e8c
Revises: baaaff03c35a
Create Date: 2023-05-16 15:18:41.866622

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7e8122d60e8c'
down_revision = 'baaaff03c35a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_check_in_records')
    op.drop_table('class_check_in')
    op.drop_table('classes')
    with op.batch_alter_table('procurement_committee_approvals', schema=None) as batch_op:
        batch_op.alter_column('approval_comment',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)

    with op.batch_alter_table('procurement_details', schema=None) as batch_op:
        batch_op.alter_column('image',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('comment',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)

    with op.batch_alter_table('tracker_accounts', schema=None) as batch_op:
        batch_op.alter_column('desc',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('comment',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)

    with op.batch_alter_table('tracker_statuses', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracker_statuses', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)

    with op.batch_alter_table('tracker_accounts', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
        batch_op.alter_column('desc',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)

    with op.batch_alter_table('procurement_details', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
        batch_op.alter_column('image',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)

    with op.batch_alter_table('procurement_committee_approvals', schema=None) as batch_op:
        batch_op.alter_column('approval_comment',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)

    op.create_table('classes',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('classes_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('refno', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('th_class_name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('en_class_name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('academic_year', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='classes_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('class_check_in',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('deadline', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('late_mins', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name='class_check_in_class_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='class_check_in_pkey')
                    )
    op.create_table('student_check_in_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stud_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('classchk_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('checkin', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('elapsed_mins', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['classchk_id'], ['class_check_in.id'], name='student_check_in_records_classchk_id_fkey'),
    sa.ForeignKeyConstraint(['stud_id'], ['students.id'], name='student_check_in_records_stud_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='student_check_in_records_pkey')
    )
    # ### end Alembic commands ###
