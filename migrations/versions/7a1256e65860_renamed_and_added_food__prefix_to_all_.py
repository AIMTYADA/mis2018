"""renamed and added food_ prefix to all food-related models

Revision ID: 7a1256e65860
Revises: 74adae175ee3
Create Date: 2018-01-23 20:46:33.330026

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7a1256e65860'
down_revision = '74adae175ee3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_farms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimated_total_size', sa.Float(asdecimal=True), nullable=True),
    sa.Column('estimated_leased_size', sa.Float(asdecimal=True), nullable=True),
    sa.Column('estimated_owned_size', sa.Float(asdecimal=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=200), nullable=False),
    sa.Column('lastname', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_person_and_farm',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('farm_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], ['food_farms.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['food_persons.id'], )
    )
    op.drop_constraint('person_to_farm_farm_id_fkey', 'person_to_farm')
    op.drop_constraint('person_to_farm_person_id_fkey', 'person_to_farm')
    op.drop_table('persons')
    op.drop_table('farms')
    op.drop_table('person_to_farm')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person_to_farm',
    sa.Column('person_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('farm_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], [u'farms.id'], name=u'person_to_farm_farm_id_fkey'),
    sa.ForeignKeyConstraint(['person_id'], [u'persons.id'], name=u'person_to_farm_person_id_fkey')
    )
    op.create_table('farms',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('estimated_total_size', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('estimated_leased_size', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('estimated_owned_size', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'farms_pkey')
    )
    op.create_table('persons',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'persons_pkey')
    )
    op.drop_constraint('food_person_and_farm_farm_id_fkey', 'food_person_and_farm')
    op.drop_constraint('food_person_and_farm_person_id_fkey', 'food_person_and_farm')
    op.drop_table('food_person_and_farm')
    op.drop_table('food_persons')
    op.drop_table('food_farms')
    # ### end Alembic commands ###
